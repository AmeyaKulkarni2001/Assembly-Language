ORG 0000H    
Mov R0,#40h  ;   R0=40h 
Mov R1,#42h  ;  R1=42h 
Mov A,@R1    ; A=10h
Mov B,A          ; Get Multiplier in B register through A  B=10h
Mov A,@R0    ; Get lower 8 bit of Multiplicand in A Register A=82h
Mul AB            ;BA = 08 20 h
Mov R0,#52h  ; Answer in three parts:last Middle First-in Memory Locations 50h 51h 52h 
Mov @R0,A    ; Store first part in location 52H      @52h=20h 
Mov R3,B        ; store partial middle part in R3       R3 = 08h
Mov R0,#41h  ; 41h=61h  pointer to memory location having upper 8 bit of Multiplicand
Mov R1,#42h  ; 42h=10h  pointer to memory location having multiplier 
Mov A,@R1        ;A=10h
Mov B,A          ;Get Multiplier in B register through A  B=10h
Mov A,@R0    ;Get upper 8 bit of Multipli
MUL AB       ;BA = 06 10h
ADD A,R3        ; Get Middle part by adding 
Mov R0,#51h
Mov @R0,A     ; Store middle part in location 51H 

Mov A,#00
ADDC A,B        ; Get last part in A
Mov R0,#50h
Mov @R0,A     ; Store last part in location 50H 
end
////////////////////////////////////////////////////////////////////////////
ORG 0000h
MOV A, 40h   ; Read lower byte of the multiplicand. In this case 82h
MOV B, 42h   ; Read multiplier. In this case 10h
MUL AB          ; Perform multiplication to get B = Higher byte A= Lower byte of multiplication. In this case,            B= 08, A= 20
MOV 52h, A   ; Store lower byte at final destination 52h
MOV R3, B     ; Store higher byte obtained temporarily in R3
MOV A,41h   ; Read higher byte of data. In this case 61h
MOV B,42h   ; Read multiplier again as it was overwritten
MUL 
MUL AB          ; Perform multiplication. B= Higher byte= 06 A= Lower byte = 10h

ADD A,R3       ; Add lower byte to temporarily stored byte from R3 to get final value of middle byte of answer
MOV 51h,A    ; Write middle byte of answer in inal destination 51h
MOV A, #00h ; If carry is generated by adding middle byte then we have to add it to highest byte. Load   
ADDC A, B       ; 00 in accumulator and do add with carry B. it will add A+ B+ carry bit 
MOV 50h, A  ; Write highest byte of the resu
